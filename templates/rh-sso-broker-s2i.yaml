#
# Copyright 2016 Red Hat, Inc. and/or its affiliates
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# An OpenShift S2I application template to build and deploy RH-SSO OSB API-based
# service broker from external Git repository, containing the broker code.
#
# Requires five paramaters:
# * BROKER_NAME              Name for the RH-SSO service broker application.
# * BROKER_NAMESPACE         Name of OpenShift namespace/project hosting the broker.
# * SOURCE_REPOSITORY_URL    Git source URI for the RH-SSO service broker code.
# * SOURCE_REPOSITORY_REF    Git branch/tag reference.
# * CONTEXT_DIR              Path within Git project to use to build the RH-SSO
#                            service broker code. Empty for root project directory.

apiVersion: v1
kind: Template
metadata:
  name: rh-sso-broker-s2i
  annotations:
    openshift.io/display-name: "RH-SSO OSB API-based service broker"
    description: "RH-SSO OSB API-based service broker"
    tags: "keycloak,sso,sso7,identity management,access management"
    iconClass: icon-sso
    openshift.io/provider-display-name: "Keycloak Community"
    openshift.io/documentation-url: "http://www.keycloak.org/documentation.html"
message: "A new RH-SSO OSB API-based service broker (without TLS support) has been created in your project. It is reachable at: 'http://${BROKER_NAME}.${BROKER_NAMESPACE}.svc.cluster.local:8080/osbapi' internal cluster URL."
labels:
  template: rh-sso-broker-s2i
parameters:
- name: BROKER_NAME
  displayName: "Broker Name"
  description: "The application name for the RH-SSO service broker, e.g.: 'rh-sso-broker'. It is used to specify hostname part of the RH-SSO service broker URL."
  value: "rh-sso-broker"
  required: true
- name: BROKER_NAMESPACE
  displayName: "Broker Namespace"
  description: "The name of the OpenShift namespace / project hosting the RH-SSO service broker, e.g.: 'rh-sso-broker'. It is used to specify the first part of the domain name of the RH-SSO service broker URL."
  value: "rh-sso-broker"
  required: true
- name: SOURCE_REPOSITORY_URL
  displayName: "Git Repository URL"
  description: "Git source URI for the RH-SSO service broker"
  value: "https://github.com/iankko/service-broker"
  required: true
- name: SOURCE_REPOSITORY_REF
  displayName: "Git Reference"
  description: "Git branch/tag reference"
  value: "master"
  required: false
- name: CONTEXT_DIR
  displayName: "Context Directory"
  description: "Path within Git project to use to build the RH-SSO service broker code. Empty for root project directory."
  value: ""
  required: false
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
  spec:
    source:
      type: Git
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${CONTEXT_DIR}
    strategy:
      type: Source
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          namespace: "openshift"
          name: "redhat-openjdk18-openshift:1.2"
    output:
      to:
        kind: ImageStreamTag
        name: "${BROKER_NAME}:latest"
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
      name: ${BROKER_NAME}
  spec:
    replicas: 1
    selector:
      app: ${BROKER_NAME}
      deploymentconfig: ${BROKER_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${BROKER_NAME}
          deploymentconfig: ${BROKER_NAME}
      spec:
        containers:
        - name: ${BROKER_NAME}
          image: ${BROKER_NAME}
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${BROKER_NAME}
        from:
          kind: ImageStreamTag
          name: "${BROKER_NAME}:latest"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
      name: ${BROKER_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      app: ${BROKER_NAME}
      deploymentconfig: ${BROKER_NAME}
- apiVersion: servicecatalog.k8s.io/v1beta1
  kind: ClusterServiceBroker
  metadata:
    name: ${BROKER_NAME}
  spec:
    url: http://${BROKER_NAME}.${BROKER_NAMESPACE}.svc.cluster.local:8080/osbapi
