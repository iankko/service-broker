#
# Copyright 2016 Red Hat, Inc. and/or its affiliates
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# An OpenShift application template to deploy RH-SSO OSB API-based service
# broker from previously built Docker image. Requires four parameters:
#
# * BROKER_NAME         Name for the RH-SSO service broker application.
# * BROKER_NAMESPACE    Name of OpenShift namespace/project hosting the broker.
# * BROKER_IMAGE_NAME   Name of the Docker image providing broker code.
# * BROKER_IMAGE_STREAM Name of image stream providing that image.

apiVersion: v1
kind: Template
metadata:
  name: rh-sso-broker
  annotations:
    openshift.io/display-name: "RH-SSO OSB API-based service broker"
    description: "RH-SSO OSB API-based service broker"
    tags: "keycloak,sso,sso7,identity management,access management"
    iconClass: icon-sso
    openshift.io/provider-display-name: "Keycloak Community"
    openshift.io/documentation-url: "http://www.keycloak.org/documentation.html"
message: "A new RH-SSO OSB API-based service broker (without TLS support) has been created in your project. It is reachable at: 'http://${BROKER_NAME}.${BROKER_NAMESPACE}.svc.cluster.local:8080/osbapi' internal cluster URL."
labels:
  template: rh-sso-broker
parameters:
- name: BROKER_NAME
  displayName: "Broker Name"
  description: "The application name for the RH-SSO service broker, e.g.: 'rh-sso-broker'. It is used to specify hostname part of the RH-SSO service broker URL."
  value: "rh-sso-broker"
  required: true
- name: BROKER_NAMESPACE
  displayName: "Broker Namespace"
  description: "The name of the OpenShift namespace / project hosting the RH-SSO service broker, e.g.: 'rh-sso-broker'. It is used to specify the first part of the domain name of the RH-SSO service broker URL."
  value: "rh-sso-broker"
  required: true
- name: BROKER_IMAGE_NAME
  displayName: "Broker Image Name"
  description: "The name of the (previously built) Docker image providing the RH-SSO service broker functionality, e.g. 'rh-sso-broker'."
  value: "rh-sso-broker"
  required: true
- name: BROKER_IMAGE_STREAM
  displayName: "Broker Image Stream"
  description: "The name of the OpenShift image stream providing the broker image, e.g. 'rh-sso-broker'."
  value: "rh-sso-broker"
  required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
      name: ${BROKER_NAME}
  spec:
    replicas: 1
    selector:
      app: ${BROKER_NAME}
      deploymentconfig: ${BROKER_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${BROKER_NAME}
          deploymentconfig: ${BROKER_NAME}
      spec:
        containers:
        - name: ${BROKER_NAME}
          image: ${BROKER_INAME_NAME}
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${BROKER_NAME}
        from:
          kind: ImageStreamTag
          name: ${BROKER_IMAGE_STREAM}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${BROKER_NAME}
    labels:
      app: ${BROKER_NAME}
      name: ${BROKER_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      app: ${BROKER_NAME}
      deploymentconfig: ${BROKER_NAME}
- apiVersion: servicecatalog.k8s.io/v1beta1
  kind: ClusterServiceBroker
  metadata:
    name: ${BROKER_NAME}
  spec:
    url: http://${BROKER_NAME}.${BROKER_NAMESPACE}.svc.cluster.local:8080/osbapi
